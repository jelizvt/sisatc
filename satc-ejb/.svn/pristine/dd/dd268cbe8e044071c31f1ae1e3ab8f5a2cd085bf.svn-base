package com.sat.sisat.tramitedocumentario.bussiness;

import java.util.Date;
import java.util.HashMap;
import java.util.List;

import javax.ejb.Local;

import com.sat.sisat.exception.SisatException;
import com.sat.sisat.persistence.entity.GnTipoDocumento;
import com.sat.sisat.persistence.entity.GnUnidad;
import com.sat.sisat.persistence.entity.TdDataValor;
import com.sat.sisat.persistence.entity.TdDocumentoAnexo;
import com.sat.sisat.persistence.entity.TdDocumentoTramite;
import com.sat.sisat.persistence.entity.TdEstadoExpediente;
import com.sat.sisat.persistence.entity.TdExpediente;
import com.sat.sisat.persistence.entity.TdRepresentante;
import com.sat.sisat.persistence.entity.TdRequisitoExpediente;
import com.sat.sisat.persistence.entity.TdResolucion;
import com.sat.sisat.persistence.entity.TdResultado;
import com.sat.sisat.persistence.entity.TdTipoTramite;
import com.sat.sisat.tramitedocumentario.dto.BusquedaExpedienteDTO;
import com.sat.sisat.tramitedocumentario.dto.ItemBandejaEntradaDTO;
import com.sat.sisat.tramitedocumentario.dto.ResolutorDTO;
import com.sat.sisat.tramitedocumentario.dto.ResumenReporteExpedientesDTO;

@Local
public interface TramiteDocumentarioBoLocal {

	public List<TdExpediente> getAllTdExpediente();

	public List<ItemBandejaEntradaDTO> obtenerExpedientes(BusquedaExpedienteDTO busquedaExpedienteDTO)
			throws SisatException;

	public List<TdTipoTramite> getAllTipoTramites() throws SisatException;
	
	public List<TdTipoTramite> obtenerTipoTramitesPorProcedimientoId(Integer procedimientoId) throws SisatException;

	public List<TdDocumentoTramite> getAllDocumentoTramites() throws SisatException;

	public List<GnUnidad> getAllGnUnidad() throws SisatException;

	public TdExpediente guardarExpediente(TdExpediente expediente,
			TdRepresentante tdRepresentante,
			List<TdDataValor> listDataValors,
			List<TdRequisitoExpediente> listRequisitoExpedientes,
			Boolean guardarRepresentante,
			List<TdDocumentoAnexo> listTdDocumentoAnexos) throws SisatException ;

	public void actualizarExpediente(TdExpediente expediente,
			TdRepresentante tdRepresentante,
			List<TdDataValor> listDataValors,
			List<TdRequisitoExpediente> listRequisitoExpedientes,
			Boolean guardarRepresentante,
			List<TdDocumentoAnexo> listTdDocumentoAnexos) throws SisatException;

	public TdExpediente obtenerExpediente(Integer expedienteId) throws SisatException;

	public TdRepresentante obtenerRepresentante(Integer representanteId) throws SisatException;

	public HashMap<String, Integer> getAllProcedimientos() throws SisatException;

	public List<TdDataValor> obtenerDataValorExpediente(Integer expedienteId) throws SisatException;

	public List<TdDocumentoTramite> getAllDocumentoTramitesByTipoTramite(Integer tipoTramiteId) throws SisatException;

	public List<TdRequisitoExpediente> getRequisitosByTipoTramiteDocumentoTramite(Integer tipoTramiteId,
			Integer docuTramiteId) throws SisatException;

	public List<TdRequisitoExpediente> obtenerRequisitosExpediente(Integer expedienteId) throws SisatException;

	public void reasignarExpediente(TdExpediente expediente, Integer unidadIdADesignar) throws SisatException;

	public void guardarResolucion(TdExpediente expediente, TdResolucion resolucion) throws SisatException;

	public void guardarResultado(TdExpediente expediente, TdResultado tdResultado) throws SisatException;

	public void guardarProyectoResolucion(TdExpediente expediente, TdResolucion resolucion) throws SisatException;

	public TdResolucion obtenerResolucion(Integer expedienteId) throws SisatException;

	public TdResultado obtenerResultado(Integer expedienteId) throws SisatException;

	public void guardarDocumentosAnexos(TdExpediente tdExpediente, List<TdDocumentoAnexo> listTdDocumentoAnexos)
			throws SisatException;

	public List<GnTipoDocumento> obtenerTiposDocumentos() throws SisatException;

	public List<TdDocumentoAnexo> obtenerDocumentosAnexos(Integer expedienteId) throws SisatException;

	public List<ResolutorDTO> obtenerResolutores(Integer unidadId) throws SisatException;

	public void asignarExpedienteAResolutor(TdExpediente tdExpediente, Integer resolutorId) throws SisatException;

	public HashMap<Integer, String> obtenerEstadosExpediente() throws SisatException;
	
	public List<TdEstadoExpediente> obtenerEstadoExpedientes()throws SisatException;
	
	public List<ResumenReporteExpedientesDTO> obtenerResumenExpedientes(Date fechaInicio, Date fechaFin)
			throws SisatException;
}
